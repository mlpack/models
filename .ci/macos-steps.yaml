steps:

# Checkout repository.
- checkout: self
  clean: true
  fetchDepth: 1

# Install Build Dependencies.
# Install mlpack from master to get new functionalities instantly.
- script: |
    set -e
    sudo xcode-select --switch /Applications/Xcode_10.1.app/Contents/Developer
    unset BOOST_ROOT
    pip install cython numpy pandas zipp configparser
    brew install openblas armadillo boost opencv
    git clone --depth 1 https://github.com/mlpack/jenkins-conf.git conf
    git clone --depth 1 https://github.com/mlpack/mlpack.git
  displayName: 'Install Build Dependencies'

# Configure CMake Args for mlpack.
- script: |
    unset BOOST_ROOT
    cd mlpack && mkdir build && cd build && cmake $(CMakeArgs-mlpack) ..
  displayName: 'CMake for mlpack'

# Install mlpack
- script: cd mlpack/build && make install -j2
  displayName: 'Install mlpack'

# Configure CMake Args for models.
- script: |
    mkdir data && mkdir build && cd build && cmake $(CMakeArgs-models) ..
  displayName: 'CMake for models'

# Build mlpack
- script: cd build && make -j2
  displayName: 'Build models'

# Run CTests.
- script: cd build/tests/ && sudo CTEST_OUTPUT_ON_FAILURE=1 ctest -T Test .
  displayName: 'Run tests via ctest'

# Publish test results to Azure Pipelines
- task: PublishTestResults@2
  inputs:
    testResultsFormat: cTest
    testResultsFiles: build/tests/Testing/*/Test.xml
    failTaskOnFailedTests: true
  displayName: 'Publish tests'

# Publish build artifacts to Azure Pipelines
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'build/tests/Testing/'
    artifactName: 'Tests'
  displayName: 'Publish artifacts test results'


